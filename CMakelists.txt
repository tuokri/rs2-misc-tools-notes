cmake_minimum_required(VERSION 4.0)
project(rs2-misc-tools-notes)

set(CMAKE_CXX_STANDARD 23)

include(CMakePrintHelpers)

if (MSVC)
    cmake_print_variables(MSVC_VERSION)
    cmake_print_variables(MSVC_TOOLSET_VERSION)
endif ()

include(CheckIPOSupported)
check_ipo_supported(RESULT RS2_FASTPACK_IPO_SUPPORTED OUTPUT RS2_FASTPACK_IPO_ERROR)

if (RS2_FASTPACK_IPO_SUPPORTED)
    message(STATUS "IPO / LTO enabled: ${RS2_FASTPACK_IPO_SUPPORTED}")
else ()
    message(STATUS "IPO / LTO not supported: ${RS2_FASTPACK_IPO_ERROR}")
endif ()

# To make things simpler, instruct .exe, .dll, and .pdb files to be placed
# in the same directory. Also get rid of Visual Studio generator's default
# Debug and Release directories to make sure all of our executable and library
# files get placed in the same directory.
if (MSVC)
    set(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
    set(CMAKE_PDB_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
    set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR})
    cmake_print_variables(CMAKE_LIBRARY_OUTPUT_DIRECTORY)
    cmake_print_variables(CMAKE_RUNTIME_OUTPUT_DIRECTORY)
    cmake_print_variables(CMAKE_PDB_OUTPUT_DIRECTORY)
    cmake_print_variables(CMAKE_ARCHIVE_OUTPUT_DIRECTORY)

    foreach (CONFIG_TYPE ${CMAKE_CONFIGURATION_TYPES})
        string(TOUPPER ${CONFIG_TYPE} CONFIG_TYPE)
        set(CMAKE_RUNTIME_OUTPUT_DIRECTORY_${CONFIG_TYPE} ${CMAKE_BINARY_DIR})
        set(CMAKE_LIBRARY_OUTPUT_DIRECTORY_${CONFIG_TYPE} ${CMAKE_BINARY_DIR})
        set(CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${CONFIG_TYPE} ${CMAKE_BINARY_DIR})
    endforeach ()
endif ()

if (CMAKE_SOURCE_DIR STREQUAL PROJECT_SOURCE_DIR)
    if (MSVC)
        string(REPLACE "/Ob1" "/Ob2" CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO})
    else ()
        string(REPLACE "-O2" "-O3" CMAKE_CXX_FLAGS_RELWITHDEBINFO ${CMAKE_CXX_FLAGS_RELWITHDEBINFO})
    endif ()
    # TODO: remove these prints later.
    cmake_print_variables(CMAKE_CXX_FLAGS_RELWITHDEBINFO)
    cmake_print_variables(CMAKE_CXX_FLAGS_RELEASE)
    cmake_print_variables(CMAKE_CXX_FLAGS_DEBUG)
endif ()

set_property(GLOBAL PROPERTY RULE_LAUNCH_COMPILE "${CMAKE_COMMAND} -E time")

find_package(
    Boost
    COMPONENTS
    program_options
    REQUIRED
)

add_subdirectory(src)

add_compile_options(${RS2_COMPILE_OPTIONS})

add_link_options(${RS2_LINK_OPTIONS})
